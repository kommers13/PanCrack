{
  "name": "check",
  "description": "<font color=\"green\">NAME</font><br><div style=\"margin-left: 2em;\"><b>create adjacency_matrix</b> - Build a graph using an adjacency matrix <span class=\"help-note\">(--help for format details)</span></div><br><div style=\"margin-left: 2em;\"><b>create incidence_matrix</b> - Build a graph using an incidence matrix <span class=\"help-note\">(--help for input rules)</span></div><br><div style=\"margin-left: 2em;\"><b>create adjacency_list</b> - Build a graph using adjacency lists <span class=\"help-note\">(--help for syntax)</span></div><br><font color=\"green\">Graph Inspection & Analysis</font><br><div style=\"margin-left: 2em;\"><b>view vertex_degrees</b> - Display vertex degrees <span class=\"help-note\">(--help for sorting/filtering)</span></div><br><div style=\"margin-left: 2em;\"><b>view connected_components</b> - Show connected components and count <span class=\"help-note\">(--help for visualization)</span></div><br><font color=\"green\">Graph Traversals</font><br><div style=\"margin-left: 2em;\"><b>algorithm dfs</b> - Run Depth-First Search (DFS) <span class=\"help-note\">(--help for start vertex/custom order)</span></div><br><div style=\"margin-left: 2em;\"><b>algorithm bfs</b> - Run Breadth-First Search (BFS) <span class=\"help-note\">(--help for level tracking)</span></div><br><div style=\"margin-left: 2em;\"><b>algorithm skeleton_tree</b> - Build skeleton tree of the graph <span class=\"help-note\">(--help for algorithm options)</span></div><br><div style=\"margin-left: 2em;\"><b>algorithm shortest_path_matrix</b> - Compute shortest path matrix <span class=\"help-note\">(--help for methods)</span></div><br><div style=\"margin-left: 2em;\"><b>algorithm validate_dfs</b> - Validate user-submitted DFS traversal <span class=\"help-note\">(--help for rules)</span></div><br><div style=\"margin-left: 2em;\"><b>algorithm validate_bfs</b> - Validate user-submitted BFS traversal <span class=\"help-note\">(--help for rules)</span></div><br><font color=\"green\">Graph Visualization</font><br><div style=\"margin-left: 2em;\"><b>show</b> - Display current graph <span class=\"help-note\">(--help for output format)</span></div><br><div style=\"margin-left: 2em;\"><b>show all</b> - Display all available graphs <span class=\"help-note\">(--help for filtering)</span></div><br><div style=\"margin-left: 2em;\"><b>draw</b> - Draw and color the graph <span class=\"help-note\">(--help for coloring options)</span></div><br><font color=\"green\">Graph Properties & Checks</font><br><div style=\"margin-left: 2em;\"><b>check -c</b> | <b>--connect_components</b> - Verify connected components</div><br><div style=\"margin-left: 2em;\"><b>check -e</b> | <b>--euler_graph</b> - Check Eulerian properties</div><br><div style=\"margin-left: 2em;\"><b>check -b</b> | <b>--bipartite_graph</b> - Verify bipartite properties</div><br><div style=\"margin-left: 2em;\"><b>check components</b> - Verify connected component count <span class=\"help-note\">(--help for proof)</span></div><br><div style=\"margin-left: 2em;\"><b>check eulerian</b> - Check if the graph is Eulerian/semi-Eulerian <span class=\"help-note\">(--help for criteria)</span></div><br><div style=\"margin-left: 2em;\"><b>check bipartite</b> - Determine if the graph is bipartite/complete bipartite <span class=\"help-note\">(--help for examples)</span></div><br><font color=\"green\">Tree & Prufer Code Operations</font><br><div style=\"margin-left: 2em;\"><b>prufer generate</b> - Generate Prufer code from a tree <span class=\"help-note\">(--help for constraints)</span></div><br><div style=\"margin-left: 2em;\"><b>prufer rebuild</b> - Rebuild a tree from Prufer code <span class=\"help-note\">(--help for output format)</span></div><br><div class=\"footer\">Use [command] --help for specifics on any operation.</div>",
  "options": [ {"-h": "--health"},
               {"-p": "--panteleev"}]
}
